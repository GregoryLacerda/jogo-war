package com.gregory.jogowarapi.services;

import java.util.List;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gregory.jogowarapi.domain.Jogador;
import com.gregory.jogowarapi.domain.Partida;
import com.gregory.jogowarapi.domain.dtos.PartidaDTO;
import com.gregory.jogowarapi.repositories.JogadorRepository;
import com.gregory.jogowarapi.repositories.PartidaRepository;
import com.gregory.jogowarapi.repositories.RodadaRepository;
import com.gregory.jogowarapi.services.exceptions.ObjectNotFoundException;

@Service
public class PartidaService {
	
	@Autowired
	private PartidaRepository repository;
	@Autowired
	private RodadaRepository RodadaRepository;
	@Autowired
	private JogadorRepository jogadorRepository;
	
	public List<PartidaDTO> findAll() {
		
		List<Partida> list = repository.findAll();
		
		List<PartidaDTO> listDto = list.stream().map(obj -> new PartidaDTO(obj)).collect(Collectors.toList());
		
		return listDto;
	}
	

	public Partida findById(Integer id) {
		
		Optional<Partida> obj = repository.findById(id);
		 
		
		return obj.orElseThrow(() -> new ObjectNotFoundException("Partida n√£o encontrado"));
	}


	public Partida update(Integer id, PartidaDTO objDto) {
		
		objDto.setCodigo(id);
		Partida oldObj = findById(id);
		//oldObj = newPartida(oldObj, objDto);
		
		
		return repository.save(oldObj);
	}
	
	private Partida newPartida(Partida obj, PartidaDTO objDto) {
		
		List<Jogador> jogador = jogadorRepository.findAllById(objDto.getJogadores());
		
		
		
		Partida partida = new Partida();
		
		
		
		
		return partida;
	}
	
}
