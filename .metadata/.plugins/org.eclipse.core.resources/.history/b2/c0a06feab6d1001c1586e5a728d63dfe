package com.gregory.jogowarapi.services;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gregory.jogowarapi.domain.Pais;
import com.gregory.jogowarapi.domain.dtos.PaisDTO;
import com.gregory.jogowarapi.repositories.PaisRepository;
import com.gregory.jogowarapi.services.exceptions.ObjectNotFoundException;

@Service
public class PaisService {
	
	@Autowired
	private PaisRepository repository;
	
	public List<PaisDTO> findAll() {
		
		List<Pais> list = repository.findAll();
		
		List<PaisDTO> listDto = list.stream().map(obj -> new PaisDTO(obj)).collect(Collectors.toList());
		
		return listDto;
	}
	
	
	public Pais create(PaisDTO objDto) {
		
		Pais newObj = new Pais(objDto);
		
		newObj.setId(null);	
		
		repository.save(newObj);
		
		return newObj;
	}


	public Pais findById(Integer id) {
		
		Optional<Pais> obj = repository.findById(id);
		 
		
		return obj.orElseThrow(() -> new ObjectNotFoundException("Pais n√£o encontrado"));
	}


	public Pais update(Integer id, PaisDTO objDto) {
		
		objDto.setId(id);
		Pais oldObj = findById(id);
		oldObj = new Pais(objDto);
		
		
		return repository.save(oldObj);
	}
	
}
